module UI.Attribute exposing
    ( Attribute
    , apply
    , applyAll
    , color
    , bgColor
    , fontWeight
    , italic
    )


import Ansi
import Internal


type Attribute
    = Color Ansi.Color
    | BgColor Ansi.Color
    | FontWeight Ansi.FontWeight
    | Italic


apply : Attribute -> String -> String
apply attr string =
    let
        
        parts =
            Internal.bgHelper string

        styled =
            case attr of
                Color c ->
                    { string = Ansi.wrapColor c parts.string
                    , suffix = parts.suffix
                    }

                BgColor c ->
                    -- Use set instead of wrap so we don't double up on
                    -- unsetBgColor or it will screw up our ability to push it
                    -- over when padding columns with spaces
                    { string = Ansi.setBgColor c ++ parts.string
                    , suffix = 
                        parts.suffix
                            |> String.replace Ansi.unsetBgColor ""
                            |> String.append Ansi.unsetBgColor
                    }

                FontWeight w ->
                    { string = Ansi.wrapFontWeight w parts.string
                    , suffix = parts.suffix
                    }

                Italic ->
                    { string = Ansi.wrapItalic parts.string
                    , suffix = parts.suffix
                    }
    in
    styled.string ++ styled.suffix


applyAll : Array Attribute -> String -> String
applyAll attrs str =
    Array.foldr apply str attrs 


color : Ansi.Color -> Attribute
color = Color


bgColor : Ansi.Color -> Attribute
bgColor = BgColor

fontWeight : Ansi.FontWeight -> Attribute
fontWeight = FontWeight

italic : Attribute
italic = Italic
