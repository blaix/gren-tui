module Util.Array exposing
    ( indexOf
    , intersect
    )


indexOf : a -> Array a -> Maybe Int
indexOf a array =
    let
        reducer val { found, i } =
            { i = i + 1
            , found =
                if a == val then
                    Just i
                else
                    found
            }

        reduced =
            Array.foldl reducer { found = Nothing, i = 0 } array
    in
    reduced.found


intersect : Array a -> Array a -> Array a
intersect a b =
    a
        |> Array.mapAndKeepJust
            (\val1 ->
                b
                    |> Array.findFirst 
                        (\val2 -> 
                            val1 == val2
                        )
            )
        |> Array.map (\{ value } -> value)


