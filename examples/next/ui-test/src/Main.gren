module Main exposing (main)


import Ansi
import Array2d
import Init
import Node
import Stream exposing (Stream)
import Task
import Tui
import UI
import UI.Attribute as Attribute
import UI.Border as Border


main : Tui.Program Model Msg
main =
    Tui.defineProgram
        { init = init
        , update = update
        , view = view
        , subscriptions = subscriptions
        , onInput = GotInput
        }


type alias Model =
    { stdout : Stream
    }


init : Tui.Environment -> Init.Task { model : Model, command : Cmd Msg }
init env =
    Node.startProgram
        { model = { stdout = env.stdout }
        , command = 
            Tui.hideCursor env.stdout
                |> Task.execute
        }


type Msg
    = GotInput Tui.Input


update : Msg -> Model -> { model : Model, command : Cmd Msg }
update msg model =
    case msg of
        GotInput input ->
            { model = model
            , command = 
                case input of
                    Tui.Escape ->
                        Tui.exit model.stdout
                            |> Task.execute
                    _ ->
                        Cmd.none
            }


view : Model -> String
view model =
    UI.toString <|
        UI.row 
            [ Attribute.color Ansi.Black
            , Attribute.bgColor Ansi.Magenta
            , Attribute.fontWeight Ansi.Bold
            ]
            [ UI.column [] 
                [ UI.text [] " col 1\n with a newline in it! "
                , UI.bordered Border.rounded <|
                    UI.grid <|
                        Array2d.map (UI.cell []) <|
                            [ [ 'c', ' ', 'c', ' ', 'c', ' ', ' ', ' ' ]
                            , [ ' ', 'o', ' ', 'o', ' ', 'o', ' ', ' ' ]
                            , [ ' ', ' ', 'o', ' ', 'o', ' ', 'o', ' ' ]
                            , [ ' ', ' ', ' ', 'l', ' ', 'l', ' ', 'l' ]
                            ]
                ]
            , UI.column 
                [ Attribute.color Ansi.Red
                , Attribute.bgColor Ansi.Yellow
                ]
                [ UI.text [] " col 2 row 1 "
                , UI.row []
                    [ UI.bordered Border.thick <|
                        UI.row [ Attribute.bgColor Ansi.Blue ]
                            [ UI.text [] "inner col 1 "
                            , UI.column []
                                [ UI.text [] "inner col 2 \nwith newline "
                                , UI.text [] "inner bottom row "
                                ]
                            ]
                    , UI.row [] 
                        [ UI.text [] " omg "
                        , UI.column [] 
                            [ UI.text [] "emojis ðŸŒˆ in\nit with "
                            , UI.text [] "nested columns oh my! "
                            ]
                        ]
                    ]
                , UI.text [] " col 2 row 3 "
                ]
            , UI.row []
                [ UI.text 
                    [ Attribute.bgColor Ansi.Green
                    , Attribute.fontWeight Ansi.NormalWeight
                    ] 
                    " col 3 â›„ "
                , UI.text [] " col 4 "
                ]
            ]


subscriptions : Model -> Sub Msg
subscriptions model =
    Sub.none
